<?xml version="1.0" encoding="UTF-8"?>
<blog>
  <post>
    <title>The Industry</title>
    <date>10th Oct 2016</date>
    <author>Matthew Windle</author>
    <image>/dist/images/blog-headers/industry.jpg</image>
    <content>
      <![CDATA[

      <h3>So you want to be part of the digital industry?</h3>
      <p>Good, because it is one of the biggest growing industries in the UK right now. </p>

      <p>The digital industry has grown quite a lot in the last 12 months, 84% in fact and if you are a developer then this is great news for you as the development side alone has grown over a quarter in the last year. Not only has the industry grown but so has the need for experienced developers. Over the last year the developer role was in demand by nearly two thirds of the market making it a fantastic opportunity for young people to get into. Along side all this the “Digital Tech Industries are a key contributor to the UK’s economy, growing faster in turnover, GVA and productivity than the rest of the economy” <a href="/docs/Tech-Nation.php" >(Tech Nation,</a> 2016, p.6). So becoming a developer isn't only good for yourself but it is helping the economy too.</p>

      <figure>
        <img src="/dist/images/developer-graph.png" alt="Pie chart showing how much developers are needed in the market." >
        <figcaption>Pie chart showing how much developers are needed in the market.</figcaption>
      </figure>

      <h3>What does it take to become a good developer? </h3><br>

      <p>Well according to the <a href="/docs/Skills-Summit.pdf" title="Read the Skills Summit report (pdf)" >Skills Summit</a> report the tech that is being used the most in the industry is PHP and JavaScript which to me is no surprise as these are fundamental to becoming a leading developer in the fast paced industry. Knowing these statistics gives me a great insight into what future employers are looking for. It also helps me keep focused on learning PHP and JavaScript as having these skills in my toolbox will give me an edge when searching for a job in the future. </p>

      <figure>
        <img src="/dist/images/popular-tech.png" alt="A graph showing what web languages are being used." >
        <figcaption>A graph showing what web languages are being used.</figcaption>
      </figure>

      <h4>But it is not just coding skills that matter.</h4><br>
      <p>From a blog post over at <strong><a href="https://www.netguru.co/blog/9-soft-skills-every-web-developer-should-master">netgeru</a></strong> is it clear that web developers lack in many soft skills. These are even the simplest ones such as communication. This is a big one, as from my experience in any type of business the lack of communcation skills can be costly. In the digital industry it is common that you will have to communcate with colleges, this could be in the form of a meeting where a new project is being outlined, or simply asking for help on a particular bit of code. Then comes the clients, again you will more than likely have to speak to a client at some point (unless you're a mind reader), but this can become rather tricky. As Chris Meier
      points out</p>
      <blockquote>
        <img src="/dist/images/icons/quote.svg" alt="quote marks">
        <p>Communicating with clients can prove to be particularly tough, since you may find yourself having to explain highly technical concepts to non-technical people. And while your colleagues and peers have no trouble understanding industry jargon, don’t assume your clients will too.</p>
      </blockquote><br>

      <h3>How much does a developer get paid?</h3>

      <p>Well lucky for developers they were in the top 3 of jobs that had the biggest pay rise last year which resulted in some developers receiving a 20% rise. On the subject of pay a developer has a excellent rate of pay within the digital industry. A junior developer can see an average salary of around 21k and this can almost double when you become a senior. I don’t know about you but this sounds good to me, and defiantly keeps me motivated whilst studying. It also helps me keep on top of my game whilst learning more skills outside of university. University will teach you the fundamentals of becoming a developer and what is trending in the industry right now, but to really become a good developer it takes time and effort not just a degree. </p>

      <figure>
        <img src="/dist/images/wages.png" alt="The average salary for developers" >
        <figcaption>The average salary for developers.</figcaption>
      </figure>

      <p>Another reason for me to get excited about future employment is that 80% of companies within the industry recruit graduates and 69% of those are graduate schemes. Alongside this, employers in my local area are more likely to employ graduates from Manchester Metropolitan University. </p>

      <h3>To summerise</h3>
      <p>It is clear to see that the digital industry is growing at a rate in where work has to be sourced from other countries. This should be an oppotunity our country should take advantage of by introducing development skills at a young age and through high school so it gives people that head start to a career in the digital industry. </p>
      <p>As long as developers keep on working on there skills in their own time and brush up on their soft skills then they will be more than ready for a long career in the digital industry.</p>
      <div class="source-links">
      <h3>Sources</h3>
        <p>Chris Meier. (2016). <span class="italic">9 Soft Skills Every Web Developer Should Master.</span> Available: <a href="https://www.netguru.co/blog/9-soft-skills-every-web-developer-should-master">https://www.netguru.co/blog/9-soft-skills-every-web-developer-should-master.</a> Last accessed 1st Nov 2016.<p>
        <p><a href="/docs/Tech-Nation.pdf" title="download Tech Nation Report (pdf)">Tech Nation Report</a></p>
        <p><a href="/docs/Skills-Summit.pdf" title="download Skills Summit Report (pdf)">Skills Summit Report</a></p>
      </div>

      ]]>
    </content>
    <caption><![CDATA[<p> So you want to be part of the digital industry? Good, because it is one of the biggest growing industries in the UK right now.</p>]]> </caption>
    <link>/blog/the-industry.php</link>
  </post>
  <post>
    <title>Building my portfolio</title>
    <date>20th Oct 2016</date>
    <author>Matthew Windle</author>
    <image>/dist/images/blog-headers/building.jpg</image>
    <content>
      <![CDATA[
      <h3>The start of a project</h3>
      <p>When it comes down to starting a project one of the first things I do is figure out what the website is going to be used for, what’s the aim of the website. This one was easy enough, it was to create a website to showcase any previous web projects that I had done and my academic blog posts. </p>

      <p>Secondly I think about the structure of the website, the pages it requires etc. I normally use excel for this as it doesn’t need to be anything to fancy. Site structure is also something to consider as <a href="https://yoast.com/about-us/joost-de-valk/">Joost de Valk</a> founder of <a href="https://yoast.com/">Yoast SEO</a> says</p>

      <blockquote>
        <img src="/dist/images/icons/quote.svg" alt="quote marks">
        <p>A good site structure is a requirement for Search Engine Optimization. It allows both your users and search engines to find content within your site more easily. A good structure is well categorized, and pages within it only link to other pages on the same topic.” </p>
      </blockquote><br>

      <figure>
        <img src="/dist/images/site-structure.png" alt="Website structure for showing the paths between links for matthewwindle.com" >
        <figcaption>The Website structure for matthewwindle.com</figcaption>
      </figure>
      <p>After the structure has been decided I normally look for websites similar to the website subject for inspiration. A quick search of the type of website you are creating will return many results. I normally stumble across <a href="http://www.creativebloq.com/">creativebloq.com</a> or <a href="http://www.awwwards.com/websites/portfolio/">awwwards.com</a> which both have a great selection of websites to help with your design.</p>

      <h3>The design process</h3>
      <p>The initial design process usually lasts around an hour where I simply scribble down wireframes on a piece of paper. This helps me get a rough idea of what I want from the website in terms of the appearance and find that it’s the quickest way.</p>

      <p>Once I have decided on a design that I am happy with I will make a more detailed design which is normally carried out in either <a href="https://www.sketchapp.com/">Sketch 3</a> or <a href="http://www.adobe.com/uk/products/photoshop.html" >Photoshop CC</a>. I like to use both of these programs for different reasons. Sketch 3 for me has a more simplistic GUI and limited in features but this is not a disadvantage at all and I normally use Sketch for more simple designs. </p>

      <figure>
        <img src="/dist/images/design.png" alt="Initial design for my portfolio" >
        <figcaption>Initial design for my portfolio</figcaption>
      </figure>

      <figure>
        <img src="/dist/images/typography.png" alt="Typography choices for my portfolio" >
        <figcaption>Typography choices for my portfolio</figcaption>
      </figure>

      <p>As published by Ofcom's 2015 Communications Market Report the UK is now a smartphone society with</p>

      <blockquote>
        <img src="/dist/images/icons/quote.svg" alt="quote marks">
        <p>(33%) of internet users see their smartphone as the most important device for going online, compared to 30% who are still sticking with their laptop.</p>
      </blockquote><br>

      <p>With this in mind I chose to adapted a mobile first design and code base so all the main styles are targeting the mobile view port. This has many benefits, one being that the design ideas will revolve around the mobile viewport which is considerably smaller than a laptop. This helps me think more about the site layout as all elements will be vertically aligned rather the the traditional horizontal layout you see on a desktop.</p>

      <h3>The fun bit – coding the website</h3>
      <p>So the design has been decided, it’s time to start coding the website. The start of my portfolio started with me initiating <a href="http://gulpjs.com/" title="External link to Gulpjs.com" >GULP</a> within the project folder. This will download the required modules for the project which will be used to compile my <a href="http://sass-lang.com/" title="External link to sass-lang.com" >SASS/SCSS</a> files and minify the compiled CSS and JavaScript files.</p>

        <figure>
          <img src="/dist/images/sasscode.png" alt="Example of using SCSS" title="Example of using SCSS" >
          <figcaption>Example of using SCSS.</figcaption>
        </figure>

      <p>One feature of SASS that I find most useful is being able to use variables within the code. So one of the first things I do is write the variables for my colour palette. This saves me time throughout the project as I don’t have to remember the colour codes, just the variable names.</p>

      <figure>
        <img src="/dist/images/color-variable.png" alt="Example of using variables in SCSS" title="Example of using variables in SCSS" >
        <figcaption>Example of using variables in SCSS.</figcaption>
      </figure>

      <p>Another great feature of using SCSS are <a href="http://sass-lang.com/guide#topic-6">mixins</a>. Mixins allow you to store blocks of code within a variable that can be later used as an include in the project. For my portfolio I used flexbox so I used the mixins to store the code for flexbox attributes and all the vendor prefixes. </p>

      <figure>
        <img src="/dist/images/mixins2.png" alt="Mixins that are used to store blocks of code." >
        <figcaption>Mixins that are used to store blocks of code.</figcaption>
      </figure>

      <p>These are all in separate SCSS files that are imported into the main SCSS file and compiled and minified into a CSS. Doing this allows the project to keep organised by keeping meaningful styles in separate files such as colours, fonts, and any global styles. </p>

      <p>For my portfolio website I decided to use XML to store the data of the blog posts and the content for my work. I decided to use XML of the simplicity of the code structure. I didn’t want to have all the content contained within the HTML so combining the XML with a PHP loop I was able to repeat blocks of code more efficiently. </p>

      <figure>
        <img src="/dist/images/php-loop.png" alt="Mixins that are used to store blocks of code." >
        <figcaption>Mixins that are used to store blocks of code.</figcaption>
      </figure>

      <p>With this method I am able to keep the page structure contained within one file and the content within another making editing really easy. It also keeps an option open for future development for a custom CMS system to update the XML.</p>

      <h3>Sources</h3>
      <div class="source-links">
        <p>Ofcom. (2015). <span class="italic">UK now a smartphone society.</span> Available:<a href="https://www.ofcom.org.uk/about-ofcom/latest/features-and-news/uk-now-a-smartphone-society" > https://www.ofcom.org.uk/about-ofcom/latest/features-and-news/uk-now-a-smartphone-society. </a> Last accessed 8th Nov 2016.</p>

        <p>Joost de Valk. (2016). <span class="italic">Intelligent site structure for better SEO. </span> Available: <a href="https://yoast.com/site-structure-seo/" >https://yoast.com/site-structure-seo/.</a> Last accessed 8th Nov 2016.</p>
      </div>

      ]]>
    </content>
    <caption><![CDATA[<p>When it comes down to starting a project one of the first things I do is figure out what the website is going to be used for, what’s the aim of the website.</p>]]></caption>
    <link>/blog/building-my-portfolio.php</link>
  </post>
  <post>
    <title>Performance and optimisation</title>
    <date>27th Oct 2016</date>
    <author>Matthew Windle</author>
    <image>/dist/images/blog-headers/performance.jpg</image>
    <content>
      <![CDATA[

      <h3>It's not the end of the project yet</h3>
      <p>So, the website is finished, everything looks awesome. One question, how well does it perform? </p>

<p>It’s all good having a website that looks good, but it’s no good if firstly, no one can find it and secondly, when people find it it takes a week to load. Luckily there are some cool tricks and tips that can help all of this. </p>

<p>Below I have outline some simple techniques that can make sure your website(s) help not only yourself as a developer, but your visitors too! </p>

  <h3>Code validation</h3>
  <p>Making sure you code validates is a crucial part of making your website. As outlined by W3C’s <a href=" https://validator.w3.org/docs/why.html" title="Read Why Validate by W3C" >Why Validate </a> document “Validation is a sign of professionalism”. Imagine you are a freelance website developer and your website which helps drive your business doesn’t validate, this may cost you a client in the future.</p>

  <p>If you are sat there wondering “how do I know if my website validates or not” W3C have you covered with there <a href="https://validator.w3.org/ " title="W3C HTML Validation Tool" >HTML Validation Tool.</a> The tool allows you to test via URL, file upload or direct code. The report then simple shows what lines have an error if any.</p>


  <figure>
    <img src="/dist/images/code-validation.png" alt="HTML code validation using W3C validation tool" >
    <figcaption>HTML code validation using W3C validation tool.</figcaption>
  </figure>

<h3>Page optimisation</h3>
<p>Does all you code validate? Great, lets move on to optimising the page.</p>
<p>If you have read my other blog post <a href="/blog/building-my-portfolio.php" title="read my other blog post building my portfolio">building my portfolio</a> you will know that more and more people are viewing the web on a mobile device. Baring this in mind most users will have a limited data plan, so every time they visit a web page it is costing them to see your content. </p>
<h4>What can you do to help? </h4><br>

<p>Well like the code validation tool there is a tool to check how well your website performs in speed and user experience. Google provide the <a href="https://developers.google.com/speed/pagespeed/insights/" >PageSpeed Insights </a>. All you need to do is provide the URL of the website you want to test and you receive a detailed report outlining how the page can be more optimised. </p>
<figure>
  <img src="/dist/images/google-speedtest.png" alt="Google PageSpeed Insight results" >
  <figcaption>Google PageSpeed Insight results</figcaption>
</figure>

<p>The report gives a rating from 0 to 100 (100 being the best) in speed and user experience. Along side this it gives you tips on how to increase your score such as minifying your code files, compressing your website files and optimising any images. At the end of the report the tool provides a link where you can download the files that will help with page speed such as the optimised images or minified code.</p>


<h3>SEO integration</h3>
<p>Lastly, but not the least important is SEO integration, Search Engine Optimisation is key to where you rank on search engines such as Google. </p>
<p>Why is SEO important, well as mention it can determine where you lie within Google rankings so this could bring you more business if you are in the top search results. As mentioned in a blog post over at <a href="https://www.reliablesoft.net/what-is-search-engine-optimization-and-why-is-it-important/" title="Read the blog post at reliablesoft.net">reliablesoft.net </a> </p>

<blockquote>
  <img src="/dist/images/icons/quote.svg" alt="quote marks">
  <p>SEO is not only about search engines but good SEO practices improve the user experience and usability of a web site.</p>
</blockquote>

<p>With this being said I can totally agree as SEO includes some of the coding basics which many forget such as adding alt tags to images and titles to links.</p>

<p>A tool that I have recently been using is <a href="https://www.screamingfrog.co.uk/seo-spider/" title="Visit Screaming Frog SEO Spider Tool" >Screaming Frog SEO</a> checker which can be downloaded for Mac and Windows. The tool checks any website (max of 500 pages for the free version) for missing elements such as alt text and image size.</p>

<figure>
  <img src="/dist/images/screamingfrog.png" alt="Screaming Frog SEO Spider Tool " >
  <figcaption>Screaming Frog SEO Spider Tool</figcaption>
</figure>
<h3>Sources</h3>
<div class="source-links">
  <p>Alex Chris. (2013). <span class="italic">What is search engine optimization and why is it important.</span> Available: <a href="https://www.reliablesoft.net/what-is-search-engine-optimization-and-why-is-it-important/">https://www.reliablesoft.net/what-is-search-engine-optimization-and-why-is-it-important/.</a> Last accessed 14 Nov 2016.</p>
  <p>W3C. (2009). <span class="italic">Why Validate?</span>. Available: <a href="https://validator.w3.org/docs/why.html">https://validator.w3.org/docs/why.html.</a> Last accessed 14 Nov 2016.</p>
</div>

          ]]>   </content>
    <caption><![CDATA[<p>It’s all good having a website that looks good, but it’s no good if firstly, no one can find it and secondly, when people find it it takes a week to load.</p>]]> </caption>
    <link>/blog/performance-and-optimisation.php</link>
  </post>
  <post>
    <title>Different is not always better</title>
    <date>15th Feb 2017</date>
    <author>Matthew Windle</author>
    <image>/dist/images/blog-headers/changes.jpg</image>
    <content>
      <![CDATA[

      <p>See the old website <a href="http://archive.matthewwindle.com/" title="link to old website" >here</a>

      <h3>Optimising Code</h3>
      <p>Having creating a website and having it peer marked by my tutors was an interesting task that I took part in. </p>
      <p>When developing a website on your own can come with a few disadvantages, one of them is overlooking your own mistakes over and over. Having taken part in the peer marking session it was clear that my website was lacking in some areas. Although the mark I received was a high first there is always room for improvement and change. </p>
      <p>Some of the main changes to the website were not visual changes but more towards how the website was coded which was having an impact on how the website performed. Some HTML elements were removed such as onclicks for links as this comes with a few drawbacks as the user can disable JavaScript which would stop the link from working. </p>
      <p>From the feedback received it was noted that the website had a JavaScript file that was rather heavy. Upon inspection of the file 90% of the file was the JQuery Framework. When searching through to see what was dependant on JQuery it was around 40 lines of code from over 4500. </p>
      <p>Taking into account that only 1% of the file is actually been used to manipulate the DOM it would be more efficient in both speed and resources to code the scripting without the JQuery framework.</p>

      <h3>Visual Changes</h3>
      <p>The visual changes are the ones that everyone can see, and what matters to most people when visiting a website.</p>
      <p>When first creating the website I was trying to design something different to what I tend to see when I am browsing the web, so I change from the standard font-face was a place to start. When I was browsing the <a href="https://fonts.google.com/">Google Font</a> library for a font to use I was stunned to see the stats for the font <a href="https://fonts.google.com/specimen/Open+Sans">Open Sans</a>. At the time of searching a font, Open sans had over 29 billion (with a B) API requests over 19 Million websites in just one week.</p>

      <figure>
        <img src="/dist/images/open-sans-stats.jpg" alt="The stats from Google fonts for Open Sans " >
        <figcaption>The stats from Google fonts for Open Sans </figcaption>
      </figure>

      <p>So I opted to use a less popular font to make mine feel more unique, although in hindsight this was not a choice that served me well. From the peer marking session, it was clear the font I had chosen (Josefin Sans) was not the best when it came to the legibility of the website. It was key this was sorted due to the website hosting many blog posts that I had written that I would not want to go unread due to a poor typeface.</p>

      <p>I decided to use <a href="https://fonts.google.com/specimen/PT+Sans">PT Sans</a> another popular font from the list on Google Fonts and the difference it made when reading was incomparable.</p>

      <figure>
        <img src="/dist/images/changes-opt.jpg" alt="The stats from Google fonts for Open Sans " >
        <figcaption>The stats from Google fonts for Open Sans </figcaption>
      </figure>

      <p>A few changes were also made within the CSS mainly in the media queries to make sure that elements displayed properly at all resolutions. This was main in the boxes where the content would disappear behind the button to read the post.</p>

      <p>Another comment that was made was that the layout looked like it was put together with different elements with the box style layout. Although this hasn’t been changed on this revision on the website it has been noted and a redesign is underway.</p>

          ]]>

        </content>
      <caption><![CDATA[<p>When developing a website on your own can come with a few disadvantages, one of them is overlooking your own mistakes over and over.</p>]]></caption>
      <link>/blog/different-isnt-always-better.php</link>
  </post>

  <post>
    <title>To git or not to git</title>
    <date>10th March 2017</date>
    <author>Matthew Windle</author>
    <image>/dist/images/blog-headers/github.jpg</image>
    <content>
      <![CDATA[

      <p>Not too long ago Git was a tool that I had only heard of and never quite used it. Main reasons being I didn’t know what benefits Git could offer and to be honest it looked really complicated to use as it commonly uses the command line, something I wasn’t familiar with using.</p>

      <p>4 Months later and well I cannot do a project without incorporating Git into the workflow. It all started back in January 2017 when <a href="">Joe Nash</a> from GitHub joined us for a lecture. He began showing the basics of how to set up Git and uploading a project online to the GitHub website. </p>

      <p>Joe managed to take away the fear of using GitHub and encouraged the class to take part in an interactive session. It was from there I really get a feel of how Git could be used to maintain and update websites.</p>

      <h3>What is Git?</h3>
      <p>A little history first, Git was first released in 2005 after a breakdown of a relationship between team behind Linux Kernel and the company BitKeeper. Linus Torvalds – the creator of Linux – developed a new tool that would be fast, have a simple design and fully distributed. With all of that and a decade later we have what we know as Git.</p>

      <p>In a nutshell, Git is a version control system (VCS) and allows the same files to be tracked and worked on amongst multiple people. Git is mostly used in development such as websites or software but can also track other files as well.</p>

      <p>Git does this through many different functions and features. The main one is that you and others can fork a repository and make updates without affecting the original copy. If you are working on a repo you can also branch off from the ‘master branch’ to make sure no changes are affecting the main copy. If the changes that are made work and or don’t cause issues elsewhere they can be merged with the master.</p>

      <p>Finally, once the merge is complete with the master branch the project can then be pushed to the online repository for others to fork and make additional changes.</p>

      <h3>The set-up</h3>
      <p>Before using Git it must be install globally on the system, this is done different across all operating systems so the getting started on Git will get you up and running.</p>

      <p><a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git" title="Getting started with Git" >Getting started with Git</a></p>

      <p>Terminal: As I was mainly using Mac for git terminal was used to execute all the commands.</p>

      <h3>Location</h3>
      <p>You can view all the projects that I have used Git with on my <a href="https://github.com/MattWindle26" title="Matthew Windles' GitHub Profile">GitHub Account.</a></p>

      <h3>How</h3>
      <p>The first thing when that needs to be done when starting to use Git is to open Terminal and located the project folder.</p>

      <figure>
        <img src="/dist/images/CD.png" alt="Changing directory in Terminal using Git " >
        <figcaption>Changing directory in Terminal using Git</figcaption>
      </figure>

      <p>Once the project folder has been selected Git can be initialised. This is done with a very quick and simple command</p>
      <p class="command" >Git Init</p>

      <figure>
        <img src="/dist/images/git-init.png" alt="Initial Git in Terminal" >
        <figcaption>Initial Git in Terminal</figcaption>
      </figure>

      <p>The Git Init command gets the folder ready and makes a new repository. A folder is also created within the directory called .git which contains all the information for the repo. </p>
      <p>As the repo is currently only stored locally the next few steps will push the project online.</p>

      <p>The next step in setting up git is to make the first commit of the repository and this is normally carried out with the command:</p>

      <p class="command">git commit -m "first commit" </p>
      <p>The breakdown of the command is basically saying that you want to commit a change in the repository, also it good to note that the text within the quotes is very useful. It can be used to see what changes others have made to the project as well as looking back through the repo history in case a rollback is needed.</p>

      <figure>
        <img src="/dist/images/first-commit.png" alt="Git first commit in terminal" >
        <figcaption>Git first commit in terminal</figcaption>
      </figure>

      <p>The next part is how we tell Git where we want to store the repository online. You guessed it another command is needed:</p>
      <p class='command' > git remote add origin https://github.com/MattWindle26/CSS-Grids.git </p>
      <p>This command tells Git where to store the repo, an account is needed on GitHub.com to store them but don’t worry they are free.</p>

      <p>The final step in getting Git ready is to push everything online. One more command, for now. </p>
      <p class="command" > git push -u origin master</p>

      <p>This command looks at the link specified in the previous command and send all the files over to GitHub ready to used later on in the project.</p>

      <h3>Git Branches</h3>
      <p>As mentioned before, Git has the ability to branch of from the master (main copy) and create a sub copy to make changes to. This can be done with the command:</p>

 <p class="command">Git branch BRANCH_NAME</p>

<p>Followed by </p>

 <p class="command">Git checkout BRANCH_NAME</p>

<p>These 2 command creates a new branch to work on and then the checkout makes sure that all the work carried out is down on that branch. </p>

<p>There are also way to check what branch you are currently working on with the command</p>
<p class="command" > Git Branch</p>
<p>This will produce a result similar to this in the terminal window.</p>

<figure>
  <img src="/dist/images/show-branch.png" alt="Terminal showing git braches" >
  <figcaption>Terminal showing git braches</figcaption>
</figure>

<p>The asterisks symbolises what branch is currently active, you can use Git Checkout to change to any of the other branches.</p>
<h3>Adding to the repository</h3>
<p>Once the project has got under way you will need to start adding your files to the repository, don’t worry, another command can help you through this process. This command is a simple as writing:</p>
<p class="command" >Git add .</p>
<p>This will take all the files in the directory and add them to the repository.</p>
<h3>Evaluation</h3>
<p>Over the past few months I have got to grips with using Git on my projects and has proven useful many times. I have accidently removed blocks of code that was then needed later on but with Git I was able to reverse the changes and retrieve the deleted code. GitHub also keeps a track of all the commits done which can be seen below. I only have experience with using Git on my own projects but look forward to using it within a working environment with other collaborators. <p>

  <figure>
    <img src="/dist/images/GitHub-squares.png" alt="GitHub Profile showing commits" >
    <figcaption>GitHub Profile showing commits</figcaption>
  </figure>

  <h3>Sources</h3>
  <div class="source-links">
    <p>git.(No Date) Getting Started- A Short History of Git. [Online] [Date Accessed: 24th Feb] URL: <a href="https://git-scm.com/book/en/v2/Getting-Started-A-Short-History-of-Git" >https://git-scm.com/book/en/v2/Getting-Started-A-Short-History-of-Git</a></p>
    <p>git.(No Date) Getting Started- Installing Git. [Online] [Date Accessed: 24th Feb]
    URL: <a href=https://git-scm.com/book/en/v2/Getting-Started-Installing-Git">https://git-scm.com/book/en/v2/Getting-Started-Installing-Git</a></p>
  </div>






       ]]>
        </content>
      <caption><![CDATA[<p>I didn’t know what benefits Git could offer and to be honest it looked really complicated to use as it commonly uses the command line.</p>]]></caption>
      <link>/blog/to-git-or-not-to-git.php</link>
  </post>



  <post>
    <title>The futures bright, the futures grids</title>
    <date>12th March 2017</date>
    <author>Matthew Windle</author>
    <image>/dist/images/blog-headers/CSS-Grids.jpg</image>
    <content>
      <![CDATA[

      <p><a href="http://grids.matthewwindle.com/final-page.php" >See my project that was created in CSS Grids</a></p>
      <p>The main aim the project was to Create a fluid layout using CSS Grids that will be used to recreate my blog page from my portfolio. </p>

      <p>The objectives that need to be completed in order to achieve the main aim are:<p>
        <ul>
          <li class="bullet-list">To research the benefits and any drawbacks of CSS Grids to identify good practice</li>
          <li class="bullet-list">To learn the fundamentals of CSS Grid Layout </li>
          <li class="bullet-list">To develop a fluid layout using the CSS grid layout method</li>
        </ul><br>
        <p>What are CSS Grids? Don’t we all ready have Grids in web design? What happens to Flexbox ?  Are all good questions and I intend to answer them all and more in this blog post.</p>

<p>So, What are CSS Grids? Not to long ago I was asking myself the same question. In brief a CSS Grid is a layout system which functions in 2 dimensions – rows and columns. Comparing this to Flexbox which is mainly a 1 dimensional system which works left to right.  </p>

<p>Looking back at the history of CSS layouts a lot of methods have been tried and for the most part of it have worked good enough. As mentioned by Chris House over at CSS-Tricks “First we used tables, then floats, positioning and inline-block, but all of these methods were essentially hacks and left out a lot of important functionality (vertical centering, for instance).”.</p>

<p>Fast forward to present day and we have the beauty of using flexbox but as mentioned this is only useful for simple 1 dimensional layouts. </p>

<h3>So is this the end of flexbox? </h3>

<p>Not at all in fact from my time using CSS Grids, using them both together actually gave some really good results. </p>

<p data-height="350" data-theme-id="dark" data-slug-hash="LWjmyd" data-default-tab="css,result" data-user="MattWindle" data-embed-version="2" data-pen-title="Grids & Flex" class="codepen">See the Pen <a href="http://codepen.io/MattWindle/pen/LWjmyd/">Grids & Flex</a> by Matthew Windle (<a href="http://codepen.io/MattWindle">@MattWindle</a>) on <a href="http://codepen.io">CodePen</a>.</p>
<script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script><br>

<p>As previously mentioned Flexbox is great for items that need to be postioned left to right, yes, the order can be changed some what but there position within the DOM pretty much stays the same, unlike with CSS Grids.</p>

<p>With the introduction of CSS Grids into the workflow it solves a lot of problems that have otherwise had hacks to create a specific layout.</p>

<h3>Can we use CSS Grids now? </h3>

<p>Another great question and well that all depends what browser you use and how up-to-date it is. Firefox v52+ is the only browser currently to date which supports CSS Grids out of the box. If you are on Google Chrome, you can enable “experimental web platform features” by navigating to “chrome://flags”. This method also works in Opera “opera://flags”. With Internet Explorer versions 10 and 11 support Grids, but unfortunately its an old implementation with outdated syntax.</p>

<p>Using Caniuse will give you the best information when looking a browser support.</p>


<figure>
  <img src="/dist/images/caniuse.png" alt="Browser support for CSS Grids" >
  <figcaption>Browser support for CSS Grids</figcaption>
</figure>

<h3>The Set-Up</h3>

<p>While learning CSS Grids and developing the website a number of methods and tools were used.</p>

<p>Text Editor: Atom, its simple easy to use, has great customisable options, what else is needed. </p>
<p>HTML, CSS & PHP: These were main key languages used to create the project. </p>
<p>GitHub: In this project GitHub was used as a safety net and allowed me to experiment on the website knowing I could revert back to an earlier state if anything broke during testing.</p>

<p><a href="https://github.com/MattWindle26" title="Matthew Windle GitHub">Matthew Windle GitHub</a></p>


<h3>Location</h3>

<p>My progression through the project can be found on <a href="https://github.com/MattWindle26" title="Matthew Windle GitHub">GitHub.</a></p>
<p><a href="http://grids.matthewwindle.com/final-page.php" >My final project.</a></p>

<h3>How</h3>

<p>When I first started researching CSS Grids it was quite difficult to find any tutorials to get me started as it is so new. So I called upon CSS-Tricks and they didn’t let me down, a guy by the name of Chris House has put together an amazing guide which I can highly recommend to anyone want to learn Grids.</p>

<p>I spent a good afternoon, fuelled by a few cups of coffee reading through the documentation and getting to grips to the new CSS Grids syntax. To begin with I enabled the experimental web platform features which set up Google Chrome ready for CSS Grids.</p>

<p>The first task I did was create a very simple 2 x 2 layout, the parent element gets the display grid property. Inside the container 2 rows and 2 columns were created which were specified using grid-template-columns and grid-row. In this instance the columns have a fixed width of 200px and the rows are set to auto. A gap has also been set for the column and row of 20px which is like putting a margin in-between the child elements.</p>

<p data-height="350" data-theme-id="dark" data-slug-hash="perZRG" data-default-tab="css,result" data-user="MattWindle" data-embed-version="2" data-pen-title="2x2 CSS Grid" class="codepen">See the Pen <a href="http://codepen.io/MattWindle/pen/perZRG/">2x2 CSS Grid</a> by Matthew Windle (<a href="http://codepen.io/MattWindle">@MattWindle</a>) on <a href="http://codepen.io">CodePen</a>.</p>
<script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script><br>

<p>The layout can be taken further. A new unit has been introduced with CSS Grids which is fractions and is marked up using fr in CSS. The fraction unit can calculate the space it has and divide it amongst the fractioned columns. So for example if the parent container has a width of 400px with 2 columns one being 3fr and the 1fr would split down to 300px and 100px widths. </p>

<p data-height="350" data-theme-id="dark" data-slug-hash="OpxJBE" data-default-tab="css,result" data-user="MattWindle" data-embed-version="2" data-pen-title="2x2 CSS Grid (Fr)" class="codepen">See the Pen <a href="http://codepen.io/MattWindle/pen/OpxJBE/">2x2 CSS Grid (Fr)</a> by Matthew Windle (<a href="http://codepen.io/MattWindle">@MattWindle</a>) on <a href="http://codepen.io">CodePen</a>.</p>
<script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script><br>

<p>Another way a grid can be laid out is using Grid-Template-Areas, personally my favourite one. Grid-Template-Areas allows you give the grid child elements a name (sort of like an ID) which can be used in the Grid-Template-Areas to position the element. </p>

<p data-height="350" data-theme-id="dark" data-slug-hash="RpLPer" data-default-tab="css,result" data-user="MattWindle" data-embed-version="2" data-pen-title="CSS Grids - Grid Template Areas" class="codepen">See the Pen <a href="http://codepen.io/MattWindle/pen/RpLPer/">CSS Grids - Grid Template Areas</a> by Matthew Windle (<a href="http://codepen.io/MattWindle">@MattWindle</a>) on <a href="http://codepen.io">CodePen</a>.</p>
<script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script><br>

<p>As seen in the codepen you can specify how many tracks the element will span across. So in a 3 column layout having “header” on the top line of the template 3 times will span the header across column one to column three.</p>

<p>Having played around with CSS Grids and understand how they worked I took my skills and recreated my personal blog page which has made massive improvements on the design and how the posts are displayed.</p>

<h3>Evaluation</h3>

<p>Getting to grips using CSS Grids has been an awesome experience and personally really looking forward to the future of web development. Already having a powerful tool such as flexbox with the addition of CSS Grids is going to make a real difference in the future of the web and how designers can look at making more advanced layouts.</p>

<p>The only downside is that it is not widely supported to date, but it won’t be long until it is in the bag of tricks that we can use.</p>

<h3>Sources</h3>
<div class="source-links">
  <p>Andrew, R. (2017). Grid by Example. [online] Gridbyexample.com. Available at: <a href="http://gridbyexample.com/" >http://gridbyexample.com/ </a>[Accessed 11 Mar. 2017].
</p>
  <p>House, C. (2017). A Complete Guide to Grid | CSS-Tricks. [online] CSS-Tricks. Available at: <a href="https://css-tricks.com/snippets/css/complete-guide-grid/" > https://css-tricks.com/snippets/css/complete-guide-grid/ </a> [Accessed 13 Mar. 2017].
</p>

</div>





       ]]>
        </content>
      <caption><![CDATA[<p>What are CSS Grids? Don’t we all ready have Grids in web design? What happens to Flexbox ?  Are all good questions and I intend to answer them all and more in this blog post.</p>]]></caption>
      <link>/blog/the-futures-bright-the-futures-grids.php</link>
  </post>
</blog>
